#!/usr/bin/perl
#

use strict;
use Digest::MD5 qw(md5_hex);
use Geo::IP;

my $gi = Geo::IP->new(GEOIP_MEMORY_CACHE);


my %continents = ("A1" => "--","A2" => "--","AD" => "EU","AE" => "AS","AF" => "AS","AG" => "NA","AI" => "NA","AL" => "EU","AM" => "AS","AN" => "NA","AO" => "AF","AP" => "AS","AQ" => "AN","AR" => "SA","AS" => "OC","AT" => "EU","AU" => "OC","AW" => "NA","AX" => "EU","AZ" => "AS","BA" => "EU","BB" => "NA","BD" => "AS","BE" => "EU","BF" => "AF","BG" => "EU","BH" => "AS","BI" => "AF","BJ" => "AF","BL" => "NA","BM" => "NA","BN" => "AS","BO" => "SA","BR" => "SA","BS" => "NA","BT" => "AS","BV" => "AN","BW" => "AF","BY" => "EU","BZ" => "NA","CA" => "NA","CC" => "AS","CD" => "AF","CF" => "AF","CG" => "AF","CH" => "EU","CI" => "AF","CK" => "OC","CL" => "SA","CM" => "AF","CN" => "AS","CO" => "SA","CR" => "NA","CU" => "NA","CV" => "AF","CX" => "AS","CY" => "AS","CZ" => "EU","DE" => "EU","DJ" => "AF","DK" => "EU","DM" => "NA","DO" => "NA","DZ" => "AF","EC" => "SA","EE" => "EU","EG" => "AF","EH" => "AF","ER" => "AF","ES" => "EU","ET" => "AF","EU" => "EU","FI" => "EU","FJ" => "OC","FK" => "SA","FM" => "OC","FO" => "EU","FR" => "EU","FX" => "EU","GA" => "AF","GB" => "EU","GD" => "NA","GE" => "AS","GF" => "SA","GG" => "EU","GH" => "AF","GI" => "EU","GL" => "NA","GM" => "AF","GN" => "AF","GP" => "NA","GQ" => "AF","GR" => "EU","GS" => "AN","GT" => "NA","GU" => "OC","GW" => "AF","GY" => "SA","HK" => "AS","HM" => "AN","HN" => "NA","HR" => "EU","HT" => "NA","HU" => "EU","ID" => "AS","IE" => "EU","IL" => "AS","IM" => "EU","IN" => "AS","IO" => "AS","IQ" => "AS","IR" => "AS","IS" => "EU","IT" => "EU","JE" => "EU","JM" => "NA","JO" => "AS","JP" => "AS","KE" => "AF","KG" => "AS","KH" => "AS","KI" => "OC","KM" => "AF","KN" => "NA","KP" => "AS","KR" => "AS","KW" => "AS","KY" => "NA","KZ" => "AS","LA" => "AS","LB" => "AS","LC" => "NA","LI" => "EU","LK" => "AS","LR" => "AF","LS" => "AF","LT" => "EU","LU" => "EU","LV" => "EU","LY" => "AF","MA" => "AF","MC" => "EU","MD" => "EU","ME" => "EU","MF" => "NA","MG" => "AF","MH" => "OC","MK" => "EU","ML" => "AF","MM" => "AS","MN" => "AS","MO" => "AS","MP" => "OC","MQ" => "NA","MR" => "AF","MS" => "NA","MT" => "EU","MU" => "AF","MV" => "AS","MW" => "AF","MX" => "NA","MY" => "AS","MZ" => "AF","NA" => "AF","NC" => "OC","NE" => "AF","NF" => "OC","NG" => "AF","NI" => "NA","NL" => "EU","NO" => "EU","NP" => "AS","NR" => "OC","NU" => "OC","NZ" => "OC","O1" => "--","OM" => "AS","PA" => "NA","PE" => "SA","PF" => "OC","PG" => "OC","PH" => "AS","PK" => "AS","PL" => "EU","PM" => "NA","PN" => "OC","PR" => "NA","PS" => "AS","PT" => "EU","PW" => "OC","PY" => "SA","QA" => "AS","RE" => "AF","RO" => "EU","RS" => "EU","RU" => "EU","RW" => "AF","SA" => "AS","SB" => "OC","SC" => "AF","SD" => "AF","SE" => "EU","SG" => "AS","SH" => "AF","SI" => "EU","SJ" => "EU","SK" => "EU","SL" => "AF","SM" => "EU","SN" => "AF","SO" => "AF","SR" => "SA","ST" => "AF","SV" => "NA","SY" => "AS","SZ" => "AF","TC" => "NA","TD" => "AF","TF" => "AN","TG" => "AF","TH" => "AS","TJ" => "AS","TK" => "OC","TL" => "AS","TM" => "AS","TN" => "AF","TO" => "OC","TR" => "EU","TT" => "NA","TV" => "OC","TW" => "AS","TZ" => "AF","UA" => "EU","UG" => "AF","UM" => "OC","US" => "NA","UY" => "SA","UZ" => "AS","VA" => "EU","VC" => "NA","VE" => "SA","VG" => "NA","VI" => "NA","VN" => "AS","VU" => "OC","WF" => "OC","WS" => "OC","YE" => "AS","YT" => "AF","ZA" => "AF","ZM" => "AF","ZW" => "AF");


while(<STDIN>)
{
	chomp;
	my ($ip, $ua) = split(/\t/);
	my ($ltype, $product, $os, $osver,$av12, $toolbar) = ("UNKNOWN", "UNKNOWN","UNKNOWN", "UNKNOWN",0,-1);
	my $c = $gi->country_code_by_addr($ip);
	my $r = $continents{$c};
	my $country = $c."\t".$r;
	my $build = 0;

	if ($ua =~ /AntiVir[^(]+\(\s*([^\s;]*)\s*;\s*([^\s;]*)\s*;([^;]*);([^;]*);([^;]*);\s*([^;]*)\s*;\s*([^;]*)\s*/)
	{
		$ltype = $1;
		$product = $2;
		$os = $6;
		$osver = $7;
		$av12 = index($ua, '@AUVI@1.0;') >= 0 ? 1 : 0;
		$toolbar = index($ua, "; 1)") >= 0 ? 1 : (index($ua, "; 0)") >= 0 ? 0 : -1);
		if ($ua =~ /BUILD \d+\.\d+\.\d+\.(\d+)/)
		{
			$build = $1;
		}
	}
	if ($ua =~ /([0-9a-f]{40})/)
	{
		print $ltype."\t".$product."\t".$os."\t".$osver."\t".$av12."\t".$toolbar."\t1\t".$1."\t".$country."\t".$build."\n";
	} elsif (  $ua =~ /([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{6})/) { 
		print $ltype."\t".$product."\t".$os."\t".$osver."\t".$av12."\t".$toolbar."\t1\t".$1.$2.$3.$4.$5."00000000000001\t".$country."\t".$build."\n";
	} else {
		# Hack UA
		$ua =~ s/(AVE|VDF) \d+(\.\d+)+/$1 removed/g;
		#print STDERR "Licence \"$ltype\", Product \"$product\", IP \"$ip\", UA \"$ua\"\n";
		print $ltype."\t".$product."\t".$os."\t".$osver."\t".$av12."\t".$toolbar."\t0\t".md5_hex($ip." ".$ua)."00000000\t".$country."\t".$build."\n";
	}
}
